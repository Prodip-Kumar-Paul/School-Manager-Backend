generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model School {
  id      String    @id @default(uuid())
  email   String    @unique
  name    String
  address String
  phone   String    @unique
  users   User[]
  classes Class[]
  Lecture Lecture[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@map("schools")
}

model User {
  id          String    @id @default(uuid())
  email       String    @unique
  password    String
  name        String
  type        String    @default("ASSISTANT_TEACHER")
  school      School    @relation(fields: [schoolId], references: [id])
  schoolId    String
  description String
  teacherId   String
  phone       String
  isActive    Boolean   @default(true)
  otp         String?
  otpExpiry   DateTime?
  isDeleted   Boolean   @default(false)
  isVerified  Boolean   @default(false)
  Lecture     Lecture[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@map("users")
}

model Class {
  id       String    @id @default(uuid())
  name     String    @unique // keeping it as string to compensate the diffenent sections in the class
  lectures Lecture[]
  school   School    @relation(fields: [schoolId], references: [id])
  schoolId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@map("classes")
}

model Lecture {
  id        String   @id @default(uuid())
  subject   String
  day       String
  school    School   @relation(fields: [schoolId], references: [id])
  schoolId  String
  teacher   User     @relation(fields: [teacherId], references: [id])
  teacherId String
  class     Class    @relation(fields: [classId], references: [id])
  classId   String
  startTime DateTime
  endTime   DateTime

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@map("lectures")
}
